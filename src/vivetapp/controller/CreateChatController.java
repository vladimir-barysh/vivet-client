package vivetapp.controller;

import javafx.collections.ListChangeListener;
import vivetapp.model.User;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;
import vivetapp.service.GroupService;
import vivetapp.service.UserService;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class CreateChatController {
    private String token;
    private boolean isAutoGeneratedName = true;
    private User currUser;

    public void init(String token) {
        this.token = token;

        UserService userService = new UserService();
        this.currUser = userService.getCurrentUser(token);
        List<User> users = userService.getAllUsers(token);
        userListView.getItems().addAll(users);
        userListView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
    }

    @FXML private TextField groupNameField;
    @FXML private ListView<User> userListView;
    @FXML private Label statusLabel;
    @FXML
    public void initialize() {
        userListView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);

        // отслеживаем ручное редактирование названия
        groupNameField.textProperty().addListener((obs, oldVal, newVal) -> {
            if (!newVal.isBlank() && !newVal.equals(generateNameFromSelection())) {
                isAutoGeneratedName = false;
            }
        });

        userListView.getSelectionModel().getSelectedItems().addListener((ListChangeListener<User>) c -> {
            List<User> selected = new ArrayList<>(userListView.getSelectionModel().getSelectedItems());

            if (selected.size() == 1) {
                groupNameField.setDisable(true);
                String generated = generateNameFromSelection();
                groupNameField.setText(generated);
                isAutoGeneratedName = true;
            } else if (selected.size() > 1) {
                groupNameField.setDisable(false);
                if (isAutoGeneratedName || groupNameField.getText().isBlank()) {
                    String generated = generateNameFromSelection();
                    groupNameField.setText(generated);
                    isAutoGeneratedName = true;
                }
            } else {
                groupNameField.clear();
                groupNameField.setDisable(false);
                isAutoGeneratedName = true;
            }
        });
    }
    @FXML
    private void onCreateGroup() {
        List<User> selectedUsers = userListView.getSelectionModel().getSelectedItems();
        String groupName = groupNameField.getText();
        List<Long> selectedUserIds = userListView.getSelectionModel()
                .getSelectedItems().stream()
                .map(User::getId)
                .collect(Collectors.toList());

        if (groupName.isEmpty()) {
            groupName = selectedUsers.stream()
                    .map(User::getUsername)
                    .collect(Collectors.joining(", "));
        }

        if (selectedUserIds.isEmpty()) {
            statusLabel.setText("Выберите участников");
            return;
        }

        GroupService groupService = new GroupService();
        boolean success = groupService.createGroup(token, groupName, selectedUserIds);

        if (success) {
            statusLabel.setText("Группа создана успешно!");
            ((Stage) groupNameField.getScene().getWindow()).close();
        } else {
            statusLabel.setText("Ошибка создания группы");
        }
    }

    private String generateNameFromSelection() {
         String fullName = userListView.getSelectionModel().getSelectedItems().stream()
                .map(User::getUsername)
                .collect(Collectors.joining(", "));
        return fullName + ", " + currUser.getUsername();
    }

}